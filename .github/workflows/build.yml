name: build
#on: workflow_dispatch
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

jobs:
  build:
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"
      - name: Install msys2
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache konan
        uses: actions/cache@v2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew build --no-daemon --stacktrace
      - name: script
        if: matrix.os == 'macOS-latest'
        run: ./ci-test-samples.sh
        shell: bash

env:
  GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"
