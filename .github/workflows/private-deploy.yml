name: private-deploy
on: workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Install msys2
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache konan
        uses: actions/cache@v2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Publish Mac Artifacts
        if: matrix.os == 'macOS-latest'
        run: ./gradlew publish --no-daemon --stacktrace --no-build-cache
        env:
          ORG_GRADLE_PROJECT_AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
          ORG_GRADLE_PROJECT_AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
          ORG_GRADLE_PROJECT_AWS_REPO_URL: ${{secrets.AWS_REPO_URL}}          
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.AWS_ACCESS_KEY }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.AWS_SECRET_KEY }}
      - name: Publish Windows Artifacts
        if: matrix.os == 'windows-latest'
        run: ./gradlew publishWindows --no-daemon --stacktrace --no-build-cache
        env:
          ORG_GRADLE_PROJECT_AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
          ORG_GRADLE_PROJECT_AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
          ORG_GRADLE_PROJECT_AWS_REPO_URL: ${{secrets.AWS_REPO_URL}}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.AWS_ACCESS_KEY }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.AWS_SECRET_KEY }}
      - name: Publish Linux Artifacts
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew publishLinux --no-daemon --stacktrace --no-build-cache
        env:
          ORG_GRADLE_PROJECT_AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
          ORG_GRADLE_PROJECT_AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
          ORG_GRADLE_PROJECT_AWS_REPO_URL: ${{secrets.AWS_REPO_URL}}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.AWS_ACCESS_KEY }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.AWS_SECRET_KEY }}

env:
  GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"
