/*
 * Copyright (c) 2021 Touchlab
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

// Write generated Kotlin to disk. This tends to mess up the compiler, but quite useful to see the
// output during dev
def printCInteropKotlin = false

kotlin {
    def commonMain = sourceSets.commonMain
    def commonTest = sourceSets.commonTest

    def darwinMain = sourceSets.create("darwinMain")
    darwinMain.dependsOn(commonMain)

    [
        macosX64(),
        macosArm64(),
        iosX64(),
        iosArm64(),
        iosArm32(),
        iosSimulatorArm64(),
        tvosArm64(),
        tvosSimulatorArm64(),
        tvosX64(),
        watchosArm32(),
        watchosArm64(),
        watchosSimulatorArm64(),
        watchosX86(),
        watchosX64()
    ].forEach { target ->
        target.compilations.main.cinterops.create(project.name) {
            includeDirs("$projectDir/src/include")
            compilerOpts("-DNS_FORMAT_ARGUMENT(A)=", "-D_Nullable_result=_Nullable")
            if (printCInteropKotlin) {
                extraOpts = listOf("-mode", "sourcecode")
            }
        }

        target.compilations.main.defaultSourceSet.dependsOn(darwinMain)
        target.compilations.test.defaultSourceSet.dependsOn(commonTest)
    }

    commonMain.dependencies {
        implementation project(":kermit")
        implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
    }

    commonTest.dependencies {
        implementation "org.jetbrains.kotlin:kotlin-test-common"
        implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
    }

    darwinMain.dependencies {
        def crashKIOsVersion = project.property("CRASHKIOS_CORE_VERSION").toString()
        implementation "co.touchlab:crashkios-core:$crashKIOsVersion"
    }
}
